name: Nx CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: ai-agent
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ai-agent

    steps:
      - name: '[1/9] Checkout repository'
        uses: actions/checkout@v3

      - name: '[2/9] Install Node.js v20'
        uses: actions/setup-node@v3
        with:
          node-version: 22.16.0

      - name: '[3/9] Install dependencies'
        run: npm ci

      - name: '[4/9] Generate Prisma client'
        run: npx nx run backend:db:generate

      - name: '[5/9] Apply migrations'
        run: npx nx run backend:db:migrate

      - name: '[6/9] Cache Nx'
        uses: actions/cache@v3
        with:
          path: node_modules/.cache/nx
          key: ${{ runner.os }}-nx-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nx-

      - name: '[7/9] Check types'
        run: npx tsc --noEmit

      - name: '[8/9] Lint'
        run: npx nx affected --target=lint --parallel=3

      - name: '[9/9] Unit tests'
        run: npx nx affected --target=test --parallel=3

      - name: '[10/9] Build'
        run: npx nx affected --target=build --parallel=3
